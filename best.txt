'use client';

import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { AlertTriangle, CheckCircle, Shield, Users, Search, MapPin, Heart, Flag, Bell } from 'lucide-react';
import { SocialIcon } from 'react-social-icons';
import WelcomePopup from './WelcomePopup';

const CamAlert = () => {
  const [showPopup, setShowPopup] = useState(true);
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const manipulationExamples = [
    "Des groupes organis√©s cr√©ent des milliers de faux comptes pour amplifier les messages de haine",
    "Utilisation d'intelligence artificielle pour cr√©er de fausses images et vid√©os compromettantes",
    "Diffusion de fausses informations sur des tensions ethniques inexistantes",
    "Cr√©ation de faux sondages pour influencer l'opinion publique",
    "Utilisation de bots pour harceler les voix mod√©r√©es et pacifiques",
    "Manipulation des contenus pour cr√©er des conflits entre r√©gions"
  ];

  const preventionTips = [
    {
      icon: <Search className="w-6 h-6 text-green-500" />,
      title: "V√©rifiez l'authenticit√©",
      content: "Examinez attentivement la date de cr√©ation, le nombre de followers, et la coh√©rence des publications."
    },
    {
      icon: <Shield className="w-6 h-6 text-yellow-500" />,
      title: "Croisez vos sources",
      content: "Validez toujours l'information aupr√®s de plusieurs m√©dias reconnus et fiables."
    },
    {
      icon: <Heart className="w-6 h-6 text-red-500" />,
      title: "Restez calme",
      content: "Ne c√©dez pas aux provocations. La r√©flexion est votre meilleure alli√©e."
    },
    {
      icon: <Users className="w-6 h-6 text-blue-500" />,
      title: "Dialoguez",
      content: "Privil√©giez toujours l'√©change constructif et respectueux entre Camerounais."
    }
  ];

  const shareMessage = "üö® ALERTE MANIPULATION üá®üá≤\nProt√©geons l'unit√© du Cameroun !";
  const shareUrl = typeof window !== 'undefined' ? window.location.href : '';

  const socialLinks = [
    { name: 'Facebook', network: 'facebook', bgColor: '#1877F2' },
    { name: 'WhatsApp', network: 'whatsapp', bgColor: '#25D366' },
    { name: 'Twitter', network: 'x', bgColor: '#000000' },
    { name: 'Telegram', network: 'telegram', bgColor: '#0088cc' }
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Barre de navigation am√©lior√©e */}
      <motion.nav
        initial={false}
        animate={{
          backgroundColor: isScrolled ? 'rgba(255, 255, 255, 0.9)' : 'transparent',
          backdropFilter: isScrolled ? 'blur(10px)' : 'none',
        }}
        className="fixed top-0 left-0 right-0 z-50 transition-colors duration-300"
      >
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <motion.div 
            className="flex items-center gap-3"
            whileHover={{ scale: 1.05 }}
          >
            <Flag className="w-6 h-6 text-green-600" />
            <span className="font-extrabold text-xl md:text-2xl bg-gradient-to-r from-green-600 via-red-600 to-yellow-500 bg-clip-text text-transparent">
              CamAlert
            </span>
          </motion.div>
          <div className="flex items-center gap-4">
            <motion.button 
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="hidden md:flex items-center gap-2 bg-white/80 text-green-600 px-4 py-2 rounded-full hover:bg-white transition-colors"
            >
              <Bell className="w-4 h-4" />
              Alertes
            </motion.button>
            <motion.button 
              onClick={() => setShowPopup(true)}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="bg-green-600 text-white px-4 py-2 rounded-full hover:bg-green-700 transition-colors flex items-center gap-2"
            >
              <Shield className="w-4 h-4" />
              <span className="hidden md:inline">Information</span>
            </motion.button>
          </div>
        </div>
      </motion.nav>

      <WelcomePopup isOpen={showPopup} onClose={() => setShowPopup(false)} />

      <div className="container mx-auto px-4 pt-24">
        {/* Hero Section am√©lior√©e */}
        <motion.header 
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="relative rounded-3xl overflow-hidden bg-gradient-to-r from-green-600 via-red-600 to-yellow-500 p-6 sm:p-8 lg:p-12 min-h-[70vh] flex items-center"
        >
          <div className="absolute inset-0 bg-black/20" />
          
          {/* Motif camerounais am√©lior√© */}
          <div className="absolute inset-0 opacity-10">
            <div className="w-full h-full" style={{
              backgroundImage: `url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M40 0l40 40-40 40L0 40z' fill='%23ffffff' fill-opacity='0.4'/%3E%3C/svg%3E")`,
              backgroundSize: '80px 80px'
            }} />
          </div>

          <div className="relative z-10 max-w-4xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.2 }}
              className="text-center"
            >
              {/* Titre responsive am√©lior√© */}
              <h1 className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-black text-white mb-6 leading-tight">
                <motion.span
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.3 }}
                  className="inline-block"
                >
                  üö® ALERTE
                </motion.span>
                <br className="md:hidden" />
                <motion.span
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.4 }}
                  className="inline-block bg-white/10 px-4 py-2 rounded-xl backdrop-blur-sm"
                >
                  MANIPULATION üá®üá≤
                </motion.span>
              </h1>
              
              <motion.p 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
                className="text-lg sm:text-xl lg:text-2xl text-white/90 mb-8 max-w-3xl mx-auto leading-relaxed"
              >
                Le <span className="font-bold">Cameroun</span> fait face √† des tentatives de 
                manipulation sur les r√©seaux sociaux. Ensemble, prot√©geons notre unit√©.
              </motion.p>

              <motion.div 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.6 }}
                className="flex flex-col sm:flex-row gap-4 justify-center"
              >
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="bg-white text-green-600 px-6 py-3 rounded-full font-bold hover:bg-green-50 transition-colors flex items-center justify-center gap-2"
                >
                  <Shield className="w-5 h-5" />
                  Comment se prot√©ger ?
                </motion.button>
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="bg-black/30 text-white px-6 py-3 rounded-full font-bold hover:bg-black/40 transition-colors flex items-center justify-center gap-2"
                >
                  <AlertTriangle className="w-5 h-5" />
                  Signaler une manipulation
                </motion.button>
              </motion.div>
            </motion.div>
          </div>
        </motion.header>

        <main className="mt-12 space-y-12 pb-12">
          {/* Section Manipulations */}
          <motion.section 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="bg-white rounded-3xl shadow-xl p-6 sm:p-8 lg:p-12"
          >
            <h2 className="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-8 flex items-center gap-3">
              <AlertTriangle className="h-8 w-8 text-red-500" />
              <span className="bg-gradient-to-r from-red-600 to-red-500 bg-clip-text text-transparent">
                Strat√©gies de Manipulation
              </span>
            </h2>

            <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
              {manipulationExamples.map((example, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.1 }}
                  className="group bg-red-50 rounded-2xl p-6 hover:shadow-lg transition-all duration-300"
                >
                  <div className="flex gap-4">
                    <CheckCircle className="h-6 w-6 text-red-500 flex-shrink-0 group-hover:scale-110 transition-transform" />
                    <p className="text-gray-800">{example}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.section>

          {/* Section Pr√©vention */}
          <motion.section 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="bg-white rounded-3xl shadow-xl p-6 sm:p-8 lg:p-12"
          >
            <h2 className="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-8 flex items-center gap-3">
              <Shield className="h-8 w-8 text-yellow-500" />
              <span className="bg-gradient-to-r from-yellow-600 to-yellow-500 bg-clip-text text-transparent">
                Se prot√©ger ensemble
              </span>
            </h2>

            <div className="grid sm:grid-cols-2 gap-6 lg:gap-8">
              {preventionTips.map((tip, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.1 }}
                  className="group bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl p-6 hover:shadow-lg transition-all duration-300"
                >
                  <div className="flex items-start gap-4">
                    <div className="bg-white p-3 rounded-xl shadow-sm group-hover:scale-110 transition-transform">
                      {tip.icon}
                    </div>
                    <div>
                      <h3 className="text-xl font-semibold text-gray-900 mb-2">{tip.title}</h3>
                      <p className="text-gray-700 leading-relaxed">{tip.content}</p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.section>

          {/* Section Unit√© */}
          <motion.section 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="relative overflow-hidden bg-gradient-to-r from-green-600 via-red-600 to-yellow-500 rounded-3xl shadow-xl p-6 sm:p-8 lg:p-12 text-white"
          >
            <div className="absolute inset-0 bg-black/10" />
            
            {/* Motif am√©lior√© */}
            <div className="absolute inset-0 opacity-10">
              <div className="w-full h-full" style={{
                backgroundImage: `url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M40 0l40 40-40 40L0 40z' fill='%23ffffff' fill-opacity='0.4'/%3E%3C/svg%3E")`,
                backgroundSize: '80px 80px'
              }} />
            </div>

            <div className="relative z-10">
              <motion.h2 
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                className="text-2xl sm:text-3xl lg:text-4xl font-bold mb-6 text-center"
              >
                <span className="inline-block">üá®üá≤</span>
                <span className="mx-2">CAMEROUNAIS, RESTONS UNIS !</span>
                <span className="inline-block">üá®üá≤</span>
              </motion.h2>
              
              <motion.p 
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.2 }}
                className="text-lg sm:text-xl text-center mb-8 max-w-2xl mx-auto leading-relaxed"
              >
                La force du Cameroun r√©side dans son unit√©. Ne laissons pas les 
                manipulations en ligne fragiliser notre coh√©sion nationale.
              </motion.p>

              {/* Carte message important */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.3 }}
                className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 mb-8 max-w-3xl mx-auto"
              >
                <p className="text-xl font-medium text-center">
                  "Un peuple uni est un peuple invincible. Ensemble, construisons 
                  un Cameroun fort et solidaire."
                </p>
              </motion.div>

              {/* Boutons de partage */}
              <div className="space-y-6">
                <motion.p
                  initial={{ opacity: 0 }}
                  whileInView={{ opacity: 1 }}
                  viewport={{ once: true }}
                  className="text-center text-lg font-medium"
                >
                  Partagez ce message pour sensibiliser vos proches
                </motion.p>

                <motion.div 
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  className="flex flex-wrap justify-center gap-4"
                >
                  {socialLinks.map((link) => (
                    <motion.button
                      key={link.name}
                      whileHover={{ scale: 1.1 }}
                      whileTap={{ scale: 0.95 }}
                      className="p-3 rounded-full bg-white/10 hover:bg-white/20 transition-colors group"
                    >
                      <SocialIcon 
                        network={link.network}
                        style={{ height: 30, width: 30 }}
                        className="group-hover:rotate-6 transition-transform"
                      />
                    </motion.button>
                  ))}
                </motion.div>
              </div>
            </div>
          </motion.section>

          {/* Nouvelle section Call-to-Action */}
          <motion.section
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="bg-white rounded-3xl shadow-xl p-6 sm:p-8 lg:p-12 text-center"
          >
            <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-6">
              Agissons ensemble pour le Cameroun ü§ù
            </h2>
            
            <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-6">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="p-4 rounded-2xl bg-green-50 hover:bg-green-100 transition-colors group"
              >
                <Shield className="w-8 h-8 text-green-600 mx-auto mb-3 group-hover:rotate-6 transition-transform" />
                <p className="font-medium text-green-800">Signaler une manipulation</p>
              </motion.button>

              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="p-4 rounded-2xl bg-yellow-50 hover:bg-yellow-100 transition-colors group"
              >
                <Users className="w-8 h-8 text-yellow-600 mx-auto mb-3 group-hover:rotate-6 transition-transform" />
                <p className="font-medium text-yellow-800">Rejoindre la communaut√©</p>
              </motion.button>

              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="p-4 rounded-2xl bg-blue-50 hover:bg-blue-100 transition-colors group"
              >
                <Search className="w-8 h-8 text-blue-600 mx-auto mb-3 group-hover:rotate-6 transition-transform" />
                <p className="font-medium text-blue-800">V√©rifier une information</p>
              </motion.button>

              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="p-4 rounded-2xl bg-red-50 hover:bg-red-100 transition-colors group"
              >
                <Heart className="w-8 h-8 text-red-600 mx-auto mb-3 group-hover:rotate-6 transition-transform" />
                <p className="font-medium text-red-800">Soutenir l'initiative</p>
              </motion.button>
            </div>
          </motion.section>
        </main>

        {/* Footer am√©lior√© */}
        <footer className="text-center py-8 space-y-4">
          <div className="flex justify-center items-center gap-2">
            <Flag className="w-5 h-5 text-green-600" />
            <p className="font-medium text-gray-600">
              CamAlert - Pour un Cameroun uni et vigilant
            </p>
          </div>
          <p className="text-sm text-gray-500">
            ¬© 2025 - Tous droits r√©serv√©s üá®üá≤
          </p>
        </footer>
      </div>
    </div>
  );
};

export default CamAlert;